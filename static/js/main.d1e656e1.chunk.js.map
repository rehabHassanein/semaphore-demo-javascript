{"version":3,"sources":["config/index.ts","components/Header/index.tsx","containers/Header/index.tsx","pages/Home/Page.tsx","pages/Home/index.tsx","components/UserList/index.tsx","pages/UserList/Page.tsx","api/users.ts","reducers/initialState.ts","constants/users.ts","actions/users.ts","selectors/users.ts","pages/UserList/index.tsx","components/UserForm/Form.tsx","validation/index.ts","components/UserForm/index.tsx","pages/UserNew/Page.tsx","pages/UserNew/index.tsx","pages/UserView/Page.tsx","pages/UserView/index.tsx","pages/NoMatch/Page.tsx","pages/NoMatch/index.tsx","components/Root/index.tsx","serviceWorker.ts","reducers/router.ts","reducers/users.ts","store/index.ts","index.tsx","reducers/index.ts"],"names":["routes","profile","users","list","new","view","default","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleDrawer","open","setState","drawerOpen","state","_this$props","classes","sideList","react_default","a","createElement","className","core_List_default","NavLink","to","sideListItem","ListItem_default","button","ListItemIcon_default","Add_default","ListItemText_default","primary","List_default","container","AppBar_default","position","Toolbar_default","variant","IconButton_default","menuButton","color","aria-label","onClick","Menu_default","Typography_default","grow","brand","loading","LinearProgress_default","progress","Drawer_default","onClose","tabIndex","role","onKeyDown","Component","withStyles","theme","textDecoration","display","alignItems","justifyContent","flexGrow","marginLeft","marginRight","width","textField","spacing","unit","fab","bottom","concat","right","marginBottom","top","withTheme","Container","connect","dispatch","Page","root","Paper_default","elevation","component","gutterBottom","objectSpread","mixins","gutters","paddingTop","paddingBottom","UserList","handleDelete","id","event","preventDefault","onDelete","_this2","Fragment","itemIds","map","index","item","items","replace","key","dense","username","secondary","description","ListItemSecondaryAction_default","Delete_default","loaded","fetchUsers","components_UserList","Link","Fab_default","axios","defaults","baseURL","process","UsersActionTypes","initialState","fetchOneUserActions","createAsyncAction","FETCH_ONE_REQUEST","FETCH_ONE_SUCCESS","FETCH_ONE_FAILURE","fetchOneUser","request","method","url","fetchOneUserCall","then","result","success","data","catch","error","failure","fetchAllUsersActions","FETCH_ALL_REQUEST","FETCH_ALL_SUCCESS","FETCH_ALL_FAILURE","saveUserActions","SAVE_ONE_REQUEST","SAVE_ONE_SUCCESS","SAVE_ONE_FAILURE","saveUser","user","undefined","updateUserCall","createUserCall","removeUserActions","REMOVE_ONE_REQUEST","REMOVE_ONE_SUCCESS","REMOVE_ONE_FAILURE","removeUser","removeUserCall","usersSelector","Form","handleChange","name","e","setFieldTouched","persist","_this$props2","_this$props2$values","values","age","firstName","lastName","errors","touched","isValid","handleSubmit","noValidate","autoComplete","onSubmit","TextField_default","InputLabelProps","shrink","label","helperText","Boolean","value","onChange","margin","FormControl_default","formControlControls","fullWidth","Button_default","onGoBack","type","disabled","React","flexDirection","userForm","Yup","required","UserForm","_callee","actions","regenerator_default","wrap","_context","prev","next","onEntitySave","setSubmitting","history","push","t0","setErrors","setStatus","msg","stop","handleGoBack","goBack","handleFormikRender","UserForm_Form","assign","formik_esm","render","initialValues","validationSchema","enableReinitialize","components_UserForm","payload","match","params","fetchUser","Root","_ref","store","es","esm","containers_Header","Switch","Route","path","UserNewPage","UserViewPage","UserListPage","HomePage","exact","NoMatchPage","window","location","hostname","router","connectRouter","reducers_users","arguments","length","action","getType","reduce","current","defineProperty","keys","filter","_state$items","objectWithoutProperties","_toPropertyKey","createHistory","basename","middlewares","routerMiddleware","thunk","enhancers","applyMiddleware","apply","composedEnhancers","composeWithDevTools","createStore","combineReducers","configureStore","ReactDOM","components_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2gBAAaA,EAAS,CACpBC,QAAS,MACTC,MAAO,CACLC,KAAM,cACNC,IAAK,aACLC,KAAM,mBAERC,QAAS,KC+DLC,cACJ,SAAAA,EAAYC,GAAe,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACzBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAORQ,aAAe,SAACC,GAAD,OAAmB,WAChCR,EAAKS,SAAS,CACZC,WAAYF,MAPdR,EAAKW,MAAQ,CACXD,YAAY,GAJWV,wEAclB,IAAAY,EACoBT,KAAKJ,MAAxBc,EADDD,EACCC,QAASpB,EADVmB,EACUnB,MAEXqB,EACJC,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQnB,MACtBqB,EAAAC,EAAAC,cAACE,EAAAH,EAAD,KACED,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAI9B,EAAOE,MAAME,IAAKuB,UAAWL,EAAQS,cAChDP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAUQ,QAAQ,GAChBT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KAAcD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,OACdD,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAcY,QAAS,eAG3Bb,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAI9B,EAAOE,MAAMC,KAAMwB,UAAWL,EAAQS,cACjDP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAUQ,QAAQ,GAChBT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KAAcD,EAAAC,EAAAC,cAACY,EAAAb,EAAD,OACdD,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAcY,QAAS,mBAOjC,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQiB,WACtBf,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACEgB,SAAS,SAETjB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAASkB,QAAQ,SACfnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACEE,UAAWL,EAAQuB,WACnBC,MAAM,UACNC,aAAW,OACXC,QAASpC,KAAKI,cAAa,IAE3BQ,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,OAEFD,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAYkB,QAAQ,KAAKG,MAAM,UAAUnB,UAAWL,EAAQ6B,MAC1D3B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAI9B,EAAOM,QAASqB,UAAWL,EAAQ8B,OAAhD,WAMJlD,EAAMmD,SAAY7B,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAgBE,UAAWL,EAAQiC,SAAWT,MAAM,cACxEtB,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAAQR,KAAML,KAAKQ,MAAMD,WAAYsC,QAAS7C,KAAKI,cAAa,IAC9DQ,EAAAC,EAAAC,cAAA,OACEgC,SAAU,EACVC,KAAK,SACLX,QAASpC,KAAKI,cAAa,GAC3B4C,UAAWhD,KAAKI,cAAa,IAE5BO,YAlEQsC,aA0ENC,uBA5HA,SAACC,GAAD,MAAmB,CAChCX,MAAO,CACLN,MAAO,UACPkB,eAAgB,OAChBC,QAAS,OACTC,WAAY,UACZC,eAAgB,WAElBpC,aAAc,CACZe,MAAO,UACPkB,eAAgB,QAElBb,KAAM,CACJiB,SAAU,GAEZvB,WAAY,CACVwB,YAAa,GACbC,YAAa,IAEfnE,KAAM,CACJoE,MAAO,KAETC,UAAW,CACTH,WAAYN,EAAMU,QAAQC,KAC1BJ,YAAaP,EAAMU,QAAQC,KAC3BH,MAAO,KAETI,IAAK,CACHlC,SAAU,WACVmC,OAAM,GAAAC,OAA0B,EAArBd,EAAMU,QAAQC,MACzBI,MAAK,GAAAD,OAA0B,EAArBd,EAAMU,QAAQC,OAE1BnC,UAAW,CACTwC,aAAc,IAEhBxB,SAAU,CACRd,SAAU,WACVuC,IAAK,QAuFyB,CAAEC,WAAW,GAAhCnB,CAAwCvD,GCzHxC2E,EALGC,YAXM,SAAC/D,GACvB,MAAO,CACLlB,MAAOkB,EAAMlB,QAIU,SAACkF,GAC1B,MAAO,IAISD,CAGhBE,4BCFIA,mLACK,IACC/D,EAAaV,KAAKJ,MAAlBc,QAER,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQgE,MACtB9D,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,CAAOE,UAAWL,EAAQgE,KAAME,UAAW,GACzChE,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAYgE,UAAU,KAAK9C,QAAQ,KAAK+C,cAAc,GAAtD,iBAPS7B,aAgBJC,uBA7BA,SAACC,GAAD,MAAmB,CAChCuB,KAAK5E,OAAAiF,EAAA,EAAAjF,CAAA,CACH0D,SAAU,GACPL,EAAM6B,OAAOC,UAFd,CAGFC,WAAiC,EAArB/B,EAAMU,QAAQC,KAC1BqB,cAAoC,EAArBhC,EAAMU,QAAQC,SAwBC,CAAEO,WAAW,GAAhCnB,CAAwCuB,GCbxCH,EALGC,YAVM,SAAC/D,GACvB,MAAO,IAIkB,SAACgE,GAC1B,MAAO,IAISD,CAGhBE,yGCMIW,8MACJC,aAAe,SAACC,GAAD,OAAgB,SAACC,GAC9BA,EAAMC,iBACN3F,EAAKD,MAAM6F,SAASH,6EAGb,IAAAI,EAAA1F,KAAAS,EACoBT,KAAKJ,MAAxBc,EADDD,EACCC,QAASpB,EADVmB,EACUnB,MAEjB,OACEsB,EAAAC,EAAAC,cAACF,EAAAC,EAAM8E,SAAP,KACE/E,EAAAC,EAAAC,cAACE,EAAAH,EAAD,KAEIvB,EAAMsG,QAAQC,IAAI,SAACP,EAAIQ,GACrB,IAAMC,EAAOzG,EAAM0G,MAAMV,GACzB,OACE1E,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAI9B,EAAOE,MAAMG,KAAKwG,QAAQ,MAAOX,GACrCvE,UAAWL,EAAQS,aACnB+E,IAAKJ,GAELlF,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACEQ,QAAQ,EACR8E,OAAO,GAEPvF,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,QAASsE,EAAKK,SACdC,UAAWN,EAAKO,cAElB1F,EAAAC,EAAAC,cAACyF,GAAA1F,EAAD,KACED,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAYsB,aAAW,SAASC,QAASsD,EAAKL,aAAaC,IACzD1E,EAAAC,EAAAC,cAAC0F,GAAA3F,EAAD,qBA/BDoC,aA6CRC,wBA1DA,SAACC,GAAD,MAAmB,CAChChC,aAAc,CACZe,MAAO,UACPkB,eAAgB,UAuDc,CAAEiB,WAAW,GAAhCnB,CAAwCkC,ICvCjDX,6SAEGzE,KAAKJ,MAAMN,MAAMmH,uCACdzG,KAAKJ,MAAM8G,gJAIZ,IAAAjG,EACqBT,KAAKJ,MAAzBc,EADDD,EACCC,QAASpB,EADVmB,EACUnB,MAEjB,OACEsB,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQgE,MACtB9D,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,CAAOE,UAAWL,EAAQgE,KAAME,UAAW,GACzChE,EAAAC,EAAAC,cAAC6F,GAAD,CACErH,MAAOA,EACPmG,SAAUzF,KAAKJ,MAAM6F,YAGzB7E,EAAAC,EAAAC,cAAC8F,GAAA,EAAD,CAAM1F,GAAI9B,EAAOE,MAAME,KACrBoB,EAAAC,EAAAC,cAAC+F,GAAAhG,EAAD,CAAKqB,MAAM,UAAUC,aAAW,MAAMpB,UAAWL,EAAQqD,KACvDnD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,gBApBOoC,aA4BJC,wBAjDA,SAACC,GAAD,MAAmB,CAChCuB,KAAK5E,OAAAiF,EAAA,EAAAjF,CAAA,CACH0D,SAAU,GACPL,EAAM6B,OAAOC,UAFd,CAGFC,WAAiC,EAArB/B,EAAMU,QAAQC,KAC1BqB,cAAoC,EAArBhC,EAAMU,QAAQC,OAE/BC,IAAK,CACHlC,SAAU,QACVmC,OAA6B,EAArBb,EAAMU,QAAQC,KACtBI,MAA4B,EAArBf,EAAMU,QAAQC,QAuCS,CAAEO,WAAW,GAAhCnB,CAAwCuB,iCCzDvDqC,KAAMC,SAASC,QAAUC,mCCiClB,ICpCKC,GDoCCC,GAA2B,CACtC7H,MAAO,CACLsG,QAAS,GACTI,MAAO,GACPvD,SAAS,EACTgE,QAAQ,cCzCAS,ilBCgBL,IAAME,GAAsBC,6BACjCH,GAAiBI,kBACjBJ,GAAiBK,kBACjBL,GAAiBM,kBAHgBH,GAMtBI,GAAe,SAC1BnC,GAD0B,OAEvB,SACHd,GAGA,OADAA,EAAS4C,GAAoBM,QAAQpC,IHjBP,SAACA,GAAD,OAAgBwB,KAAM,CACpDa,OAAQ,MACRC,IAAG,UAAA3D,OAAYqB,KGgBRuC,CAAiBvC,GACrBwC,KAAK,SAACC,GACL,OAAOvD,EAAS4C,GAAoBY,QAAQD,EAAOE,SAEpDC,MAAM,SAACC,GACN,OAAO3D,EAAS4C,GAAoBgB,QAAQD,QAIrCE,GAAuBhB,6BAClCH,GAAiBoB,kBACjBpB,GAAiBqB,kBACjBrB,GAAiBsB,kBAHiBnB,GAMvBX,GAAa,kBAAM,SAC9BlC,GAIA,OAFAA,EAAS6D,GAAqBX,WHzCOZ,KAAM,CAC3Ca,OAAQ,MACRC,IAAK,WG0CFE,KAAK,SAACC,GACL,OAAOvD,EAAS6D,GAAqBL,QAAQD,EAAOE,SAErDC,MAAM,SAACC,GACN,OAAO3D,EAAS6D,GAAqBD,QAAQD,QAItCM,GAAkBpB,6BAC7BH,GAAiBwB,iBACjBxB,GAAiByB,iBACjBzB,GAAiB0B,iBAHYvB,GAMlBwB,GAAW,SACtBC,GADsB,OAEnB,SACHtE,GAWA,OATAA,EAASiE,GAAgBf,QAAQoB,UFrDZC,IEwDHD,EFxDJxD,GDMc,SAACwD,GAAD,OAAwBhC,KAAM,CAC1Da,OAAQ,MACRC,IAAG,UAAA3D,OAAY6E,EAAKxD,IACpB2C,KAAMa,IGgDME,CAAeF,GHzDC,SAACA,GAAD,OAAiBhC,KAAM,CACnDa,OAAQ,OACRC,IAAK,SACLK,KAAMa,IGwDMG,CAAeH,IAIxBhB,KAAK,SAACC,GACL,OAAOvD,EAASiE,GAAgBT,QAAQD,EAAOE,SAEhDC,MAAM,SAACC,GACN,OAAO3D,EAASiE,GAAgBL,QAAQD,QAIjCe,GAAoB7B,6BAC/BH,GAAiBiC,mBACjBjC,GAAiBkC,mBACjBlC,GAAiBmC,mBAHchC,GAMpBiC,GAAa,SACxBhE,GADwB,OAErB,SACHd,GAIA,OAFAA,EAAS0E,GAAkBxB,QAAQpC,IHtEP,SAACA,GAAD,OAAgBwB,KAAM,CAClDa,OAAQ,SACRC,IAAG,UAAA3D,OAAYqB,KGsERiE,CAAejE,GACnBwC,KAAK,SAACC,GACL,OAAOvD,EAAS0E,GAAkBlB,QAAQ1C,MAE3C4C,MAAM,SAACC,GACN,OAAO3D,EAAS0E,GAAkBd,QAAQD,QCtGnCqB,GAAgB,SAAChJ,GAAD,OAAuBA,EAAMlB,OCyB3CgF,GALGC,YAbM,SAAC/D,GACvB,MAAO,CACLlB,MAAOkK,GAAchJ,KAIE,SAACgE,GAC1B,MAAO,CACLkC,WAAY,kBAAMlC,EAASkC,OAC3BjB,SAAU,SAACH,GAAD,OAAgBd,EAAS8E,GAAWhE,OAIhCf,CAGhBE,4ECMIgF,8MACJC,aAAe,SAACC,GAAD,OAAuB,SAACC,GAA4B,IAAAnJ,EAI7DZ,EAAKD,MAFP8J,EAF+DjJ,EAE/DiJ,aACAG,EAH+DpJ,EAG/DoJ,gBAGFD,EAAEE,UAEFJ,EAAaE,GACbC,EAAgBF,GAAM,GAAM,6EAGrB,IAAAI,EAcH/J,KAAKJ,MAZPc,EAFKqJ,EAELrJ,QAFKsJ,EAAAD,EAGLE,OACE7D,EAJG4D,EAIH5D,SACAE,EALG0D,EAKH1D,YACA4D,EANGF,EAMHE,IACAC,EAPGH,EAOHG,UACAC,EARGJ,EAQHI,SAEFC,EAVKN,EAULM,OACAC,EAXKP,EAWLO,QACAC,EAZKR,EAYLQ,QACAC,EAbKT,EAaLS,aAGF,OACE5J,EAAAC,EAAAC,cAAA,QACEC,UAAWL,EAAQiB,UACnB8I,YAAY,EACZC,aAAa,MACbC,SAAUH,GAEV5J,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,CACEgK,gBAAiB,CAAEC,QAAQ,GAC3BxF,GAAG,WACHqE,KAAK,WACLoB,MAAM,WACNC,WAAYV,EAAQlE,SAAWiE,EAAOjE,SAAW,GACjD+B,MAAOmC,EAAQlE,UAAY6E,QAAQZ,EAAOjE,UAC1CrF,UAAWL,EAAQkD,UACnBsH,MAAO9E,EACP+E,SAAUnL,KAAK0J,aAAa,YAC5B0B,OAAO,WAETxK,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,CACEgK,gBAAiB,CAAEC,QAAQ,GAC3BxF,GAAG,cACHqE,KAAK,cACLoB,MAAM,cACNC,WAAYV,EAAQhE,YAAc+D,EAAO/D,YAAc,GACvD6B,MAAOmC,EAAQhE,aAAe2E,QAAQZ,EAAO/D,aAC7CvF,UAAWL,EAAQkD,UACnBsH,MAAO5E,EACP6E,SAAUnL,KAAK0J,aAAa,eAC5B0B,OAAO,WAETxK,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,CACEgK,gBAAiB,CAAEC,QAAQ,GAC3BxF,GAAG,MACHqE,KAAK,MACLoB,MAAM,MACNC,WAAYV,EAAQJ,IAAMG,EAAOH,IAAM,GACvC/B,MAAOmC,EAAQJ,KAAOe,QAAQZ,EAAOH,KACrCnJ,UAAWL,EAAQkD,UACnBsH,MAAOhB,EACPiB,SAAUnL,KAAK0J,aAAa,OAC5B0B,OAAO,WAETxK,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,CACEgK,gBAAiB,CAAEC,QAAQ,GAC3BxF,GAAG,YACHqE,KAAK,YACLoB,MAAM,aACNC,WAAYV,EAAQH,UAAYE,EAAOF,UAAY,GACnDhC,MAAOmC,EAAQH,WAAac,QAAQZ,EAAOF,WAC3CpJ,UAAWL,EAAQkD,UACnBsH,MAAOf,EACPgB,SAAUnL,KAAK0J,aAAa,aAC5B0B,OAAO,WAETxK,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,CACEgK,gBAAiB,CAAEC,QAAQ,GAC3BxF,GAAG,WACHqE,KAAK,WACLoB,MAAM,YACNC,WAAYV,EAAQF,SAAWC,EAAOD,SAAW,GACjDjC,MAAOmC,EAAQF,UAAYa,QAAQZ,EAAOD,UAC1CrJ,UAAWL,EAAQkD,UACnBsH,MAAOd,EACPe,SAAUnL,KAAK0J,aAAa,YAC5B0B,OAAO,WAETxK,EAAAC,EAAAC,cAACuK,GAAAxK,EAAD,CAAaE,UAAWL,EAAQ4K,oBAAqBC,WAAW,GAC9D3K,EAAAC,EAAAC,cAAC0K,GAAA3K,EAAD,CACEkB,QAAQ,YACRhB,UAAWL,EAAQW,OACnBe,QAASpC,KAAKJ,MAAM6L,UAHtB,QAOCzL,KAAKJ,MAAM0F,IAAM1E,EAAAC,EAAAC,cAAC0K,GAAA3K,EAAD,CAChBkB,QAAQ,YACRG,MAAM,YACNnB,UAAWL,EAAQW,OACnBe,QAASpC,KAAKJ,MAAM6F,UAJJ,UAQlB7E,EAAAC,EAAAC,cAAC0K,GAAA3K,EAAD,CACE6K,KAAK,SACL3J,QAAQ,YACRG,MAAM,UACNyJ,UAAWpB,EACXxJ,UAAWL,EAAQW,QALrB,iBApHSuK,IAAM3I,WAmIVC,wBAzJA,SAACC,GAAD,MAAmB,CAChCmI,oBAAqB,CACnBjI,QAAS,OACTwI,cAAe,MACftI,eAAgB,iBAElBK,UAAW,CACTH,WAAYN,EAAMU,QAAQC,KAC1BJ,YAAaP,EAAMU,QAAQC,MAE7BzC,OAAQ,CACN+J,OAAQjI,EAAMU,QAAQC,QA8IQ,CAAEO,WAAW,GAAhCnB,CAAwCuG,aChK1CqC,GAAWC,UAAW,CACjC3F,SAAU2F,YAEPC,SAAS,wBACTtM,QAAQ,IACX4G,YAAayF,YAEVC,SAAS,2BACTtM,QAAQ,IACXwK,IAAK6B,YAEFrM,QAAQ,GACXyK,UAAW4B,YAERrM,QAAQ,IACX0K,SAAU2B,YAEPrM,QAAQ,MC+DEuM,8MAlEbzB,qDAAe,SAAA0B,EAAOjC,EAAsBkC,GAA7B,OAAAC,GAAAvL,EAAAwL,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEL3M,EAAKD,MAAM6M,aAAaxC,GAFnB,OAGXkC,EAAQO,eAAc,GAEtB7M,EAAKD,MAAM+M,QAAQC,KAAKxN,EAAOE,MAAMC,MAL1B+M,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAOXH,EAAQO,eAAc,GACtBP,EAAQW,UAARR,EAAAO,IACAV,EAAQY,UAAU,CAAEC,IAAK,sCATd,yBAAAV,EAAAW,SAAAf,EAAAlM,KAAA,sEAafqF,aAAe,SAACE,GACdA,EAAMC,iBACF3F,EAAKD,MAAM6F,UAAY5F,EAAKD,MAAM0F,IACpCzF,EAAKD,MAAM6F,SAAS5F,EAAKD,MAAM0F,IAEjCzF,EAAKD,MAAM+M,QAAQC,KAAKxN,EAAOE,MAAMC,SAGvC2N,aAAe,kBAAMrN,EAAKD,MAAM+M,QAAQQ,YAExCC,mBAAqB,SAACxN,GAAD,OACnBgB,EAAAC,EAAAC,cAACuM,GAADvN,OAAAwN,OAAA,GACM1N,EADN,CAEE6F,SAAU5F,EAAKwF,aACfoG,SAAU5L,EAAKqN,aACf5H,GAAIzF,EAAKD,MAAM0F,+EAKjB,IAAMS,EAAO/F,KAAKJ,MAAMN,MAAM0G,MAAjB,GAAA/B,OAA0BjE,KAAKJ,MAAM0F,MAAS,GAErD2E,EAA6B,CACjC3E,GAAIS,EAAKT,GACTc,SAAWL,EAAKK,SAEZL,EAAKK,SADL,GAEJE,YAAcP,EAAKO,YAEfP,EAAKO,YADL,GAEJ4D,IAAMnE,EAAKmE,IAEPnE,EAAKmE,IADL,EAEJC,UAAYpE,EAAKoE,UAEbpE,EAAKoE,UADL,GAEJC,SAAWrE,EAAKqE,SAEZrE,EAAKqE,SADL,IAIN,OACExJ,EAAAC,EAAAC,cAACyM,GAAA,EAAD,CACEC,OAAQxN,KAAKoN,mBACbK,cAAexD,EACfyD,iBAAkB5B,GAClBnB,SAAU3K,KAAKwK,aACfmD,oBAAoB,WA7DL1K,aCSjBwB,oLACK,IAAAhE,EAC8BT,KAAKJ,MAAlCc,EADDD,EACCC,QAASpB,EADVmB,EACUnB,MAAOqN,EADjBlM,EACiBkM,QAExB,OACE/L,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQgE,MACtB9D,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,CAAOE,UAAWL,EAAQgE,KAAME,UAAW,GACzChE,EAAAC,EAAAC,cAAC8M,GAAD,CACEnB,aAAczM,KAAKJ,MAAM6M,aACzBnN,MAAOA,EACPqN,QAASA,EACTrH,GAAI,cAXGrC,aAmBJC,wBAnCA,SAACC,GAAD,MAAmB,CAChCuB,KAAK5E,OAAAiF,EAAA,EAAAjF,CAAA,CACH0D,SAAU,GACPL,EAAM6B,OAAOC,UAFd,CAGFC,WAAiC,EAArB/B,EAAMU,QAAQC,KAC1BqB,cAAoC,EAArBhC,EAAMU,QAAQC,SA8BC,CAAEO,WAAW,GAAhCnB,CAAwCuB,ICjBxCH,GALGC,YAZM,SAAC/D,GACvB,MAAO,CACLlB,MAAOkK,GAAchJ,KAIE,SAACgE,GAC1B,MAAO,CACLiI,aAAc,SAACoB,GAAD,OAAiCrJ,EAASqE,GAASgF,OAInDtJ,CAGhBE,ICGIA,6SAEWzE,KAAKJ,MAAMN,MAAM0G,MAAMhG,KAAKJ,MAAMkO,MAAMC,OAAOzI,KAC9CtF,KAAKJ,MAAMN,MAAMmD,wCACvBzC,KAAKJ,MAAMoO,UAAUhO,KAAKJ,MAAMkO,MAAMC,OAAOzI,uIAI9C,IAAA7E,EAC4DT,KAAKJ,MAAhEc,EADDD,EACCC,QAASpB,EADVmB,EACUnB,MAAOmN,EADjBhM,EACiBgM,aAAchH,EAD/BhF,EAC+BgF,SAAUkH,EADzClM,EACyCkM,QAASmB,EADlDrN,EACkDqN,MAEzD,OACElN,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQgE,MACtB9D,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,CAAOE,UAAWL,EAAQgE,KAAME,UAAW,GACzChE,EAAAC,EAAAC,cAAC8M,GAAD,CACEnB,aAAcA,EACdhH,SAAUA,EACVnG,MAAOA,EACPqN,QAASA,EACTrH,GAAIwI,EAAMC,OAAOzI,cAnBVrC,aA2BJC,wBA7CA,SAACC,GAAD,MAAmB,CAChCuB,KAAK5E,OAAAiF,EAAA,EAAAjF,CAAA,CACH0D,SAAU,GACPL,EAAM6B,OAAOC,UAFd,CAGFC,WAAiC,EAArB/B,EAAMU,QAAQC,KAC1BqB,cAAoC,EAArBhC,EAAMU,QAAQC,SAwCC,CAAEO,WAAW,GAAhCnB,CAAwCuB,IC1BxCH,GALGC,YAdM,SAAC/D,GACvB,MAAO,CACLlB,MAAOkK,GAAchJ,KAIE,SAACgE,GAC1B,MAAO,CACLiI,aAAc,SAACoB,GAAD,OAAiCrJ,EAASqE,GAASgF,KACjEpI,SAAU,SAACH,GAAD,OAAgBd,EAAS8E,GAAWhE,KAC9C0I,UAAW,SAAC1I,GAAD,OAAgBd,EAASiD,GAAanC,OAInCf,CAGhBE,ICRIA,oLACK,IACC/D,EAAaV,KAAKJ,MAAlBc,QAER,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQgE,MACtB9D,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,CAAOE,UAAWL,EAAQgE,KAAME,UAAW,GAA3C,gCANW3B,aAcJC,wBA3BA,SAACC,GAAD,MAAmB,CAChCuB,KAAK5E,OAAAiF,EAAA,EAAAjF,CAAA,CACH0D,SAAU,GACPL,EAAM6B,OAAOC,UAFd,CAGFC,WAAiC,EAArB/B,EAAMU,QAAQC,KAC1BqB,cAAoC,EAArBhC,EAAMU,QAAQC,SAsBC,CAAEO,WAAW,GAAhCnB,CAAwCuB,ICVxCH,GALGC,YAVM,SAAC/D,GACvB,MAAO,IAIkB,SAACgE,GAC1B,MAAO,IAISD,CAGhBE,ICUawJ,GAjBF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOxB,EAAVuB,EAAUvB,QAAV,OACX/L,EAAAC,EAAAC,cAACsN,EAAA,EAAD,CAAUD,MAAOA,GACfvN,EAAAC,EAAAC,cAACuN,EAAA,EAAD,CAAQ1B,QAASA,GACf/L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwN,EAAD,MACA1N,EAAAC,EAAAC,cAACyN,EAAA,EAAD,KACE3N,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,KAAMrP,EAAOE,MAAME,IAAKqF,UAAW6J,KAC1C9N,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,KAAMrP,EAAOE,MAAMG,KAAMoF,UAAW8J,KAC3C/N,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,KAAMrP,EAAOE,MAAMC,KAAMsF,UAAW+J,KAC3ChO,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,KAAMrP,EAAOM,QAASmF,UAAWgK,EAAUC,OAAO,IACzDlO,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAO3J,UAAWkK,UCXR9D,QACW,cAA7B+D,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpB,MACvB,2HCfSqB,GAAA,SAACxC,GAAD,OAAsByC,YAAczC,yWCGpC,IAAA0C,GAAA,WAAmE,IAAlE7O,EAAkE8O,UAAAC,OAAA,QAAAxG,IAAAuG,UAAA,GAAAA,UAAA,GAA7CnI,GAAa7H,MAAOkQ,EAAyBF,UAAAC,OAAA,EAAAD,UAAA,QAAAvG,EAChF,OAAQyG,EAAO9D,MACb,KAAK+D,mBAAQnQ,GAA2BoI,SACtC,OAAO5H,OAAAiF,EAAA,EAAAjF,CAAA,GACFU,EADL,CAEEiC,SAAS,EACTgE,QAAQ,IAGZ,KAAKgJ,mBAAQnQ,GAA2B0I,SACtC,IAAMhC,EAAgBwJ,EAAO3B,QAC1B6B,OAAO,SAAC3H,EAAQ4H,GAAT,OAAA7P,OAAAiF,EAAA,EAAAjF,CAAA,GAA0BiI,EAA1BjI,OAAA8P,GAAA,EAAA9P,CAAA,GAAmC6P,EAAQrK,GAAKqK,KAAW,IAC/D/J,EAAoB9F,OAAO+P,KAAK7J,GACnC8J,OAAO,SAACxK,GAAD,OAAgBU,EAAMV,KAChC,OAAOxF,OAAAiF,EAAA,EAAAjF,CAAA,GACFU,EADL,CAEEoF,UACAI,QACAvD,SAAS,EACTgE,QAAQ,IAGZ,KAAKgJ,mBAAQnQ,GAA2B8I,SACtC,OAAOtI,OAAAiF,EAAA,EAAAjF,CAAA,GACFU,EADL,CAEEiC,SAAS,IAGb,KAAKgN,mBAAQnQ,GAA0BoI,SACrC,OAAO5H,OAAAiF,EAAA,EAAAjF,CAAA,GACFU,EADL,CAEEiC,SAAS,IAGb,KAAKgN,mBAAQnQ,GAA0B0I,SACrC,IAAMhC,EAAalG,OAAAiF,EAAA,EAAAjF,CAAA,GACdU,EAAMwF,MADQlG,OAAA8P,GAAA,EAAA9P,CAAA,GAEhB0P,EAAO3B,QAAQvI,GAAKkK,EAAO3B,UAExBjI,EAAU9F,OAAO+P,KAAK7J,GACzB8J,OAAO,SAACxK,GAAD,OAAgBU,EAAMV,KAChC,OAAOxF,OAAAiF,EAAA,EAAAjF,CAAA,GACFU,EADL,CAEEoF,UACAI,QACAvD,SAAS,IAGb,KAAKgN,mBAAQnQ,GAA0B8I,SACrC,OAAOtI,OAAAiF,EAAA,EAAAjF,CAAA,GACFU,EADL,CAEEiC,SAAS,IAGb,KAAKgN,mBAAQnQ,GAAsBoI,SACjC,OAAO5H,OAAAiF,EAAA,EAAAjF,CAAA,GACFU,EADL,CAEEiC,SAAS,IAGb,KAAKgN,mBAAQnQ,GAAsB0I,SACjC,IAAMhC,EAAalG,OAAAiF,EAAA,EAAAjF,CAAA,GACdU,EAAMwF,MADQlG,OAAA8P,GAAA,EAAA9P,CAAA,GAEhB0P,EAAO3B,QAAQvI,GAAKkK,EAAO3B,UAGxBjI,EAAU9F,OAAO+P,KAAK7J,GACzB8J,OAAO,SAACxK,GAAD,OAAgBU,EAAMV,KAEhC,OAAOxF,OAAAiF,EAAA,EAAAjF,CAAA,GACFU,EADL,CAEEoF,UACAI,QACAvD,SAAS,IAGb,KAAKgN,mBAAQnQ,GAAsB8I,SACjC,OAAOtI,OAAAiF,EAAA,EAAAjF,CAAA,GACFU,EADL,CAEEiC,SAAS,IAGb,KAAKgN,mBAAQnQ,GAAwBoI,SACnC,OAAO5H,OAAAiF,EAAA,EAAAjF,CAAA,GACFU,EADL,CAEEiC,SAAS,IAGb,KAAKgN,mBAAQnQ,GAAwB0I,SAAU,IAAA+H,EACAvP,EAAMwF,MAAhBA,GADU+J,EACrCP,EAAO3B,SAD8B/N,OAAAkQ,GAAA,EAAAlQ,CAAAiQ,EAAA,CACrCP,EAAO3B,SAD8BhI,IAAAoK,MAGvCrK,EAAU9F,OAAO+P,KAAK7J,GACzB8J,OAAO,SAACxK,GAAD,OAAgBU,EAAMV,KAEhC,OAAOxF,OAAAiF,EAAA,EAAAjF,CAAA,GACFU,EADL,CAEEoF,UACAI,QACAvD,SAAS,IAGb,KAAKgN,mBAAQnQ,GAAwB8I,SACnC,OAAOtI,OAAAiF,EAAA,EAAAjF,CAAA,GACFU,EADL,CAEEiC,SAAS,IAGb,QACE,OAAOjC,ICxGAmM,GAAUuD,KAAc,CACnCC,SAAUlJ,+BCHLkH,GDMgB,WACrB,IELcxB,EFKRyD,EAAc,CAClBC,aAAiB1D,IACjB2D,MAKIC,EAAY,CAFSC,mBAAeC,WAAf,EAAmBL,IAKxCM,EAAoBC,uBAAmBF,WAAnB,EAAuBF,GAQjD,MAAO,CAAEpC,MANKyC,wBEjBAjE,EFkBAA,GElBqBkE,2BAA4B,CAC/DvR,SACA6P,OAAQA,GAAOxC,WFiBb5D,EACA2H,ICtBYI,GAAT3C,MAEP4C,IAASvD,OACP5M,EAAAC,EAAAC,cAACkQ,GAAD,CACE7C,MAAOA,GACPxB,QAASA,KAEXsE,SAASC,eAAe,SJ+HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvJ,KAAK,SAAAwJ,GACjCA,EAAaC","file":"static/js/main.d1e656e1.chunk.js","sourcesContent":["export const routes = {\n  profile: '/me',\n  users: {\n    list: '/users/list',\n    new: '/users/new',\n    view: '/users/edit/:id',\n  },\n  default: '/',\n};\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport ListIcon from '@material-ui/icons/List';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { routes } from '../../config';\nimport { IUsersState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme) => ({\n  brand: {\n    color: 'inherit',\n    textDecoration: 'none',\n    display: 'flex',\n    alignItems: 'inherit',\n    justifyContent: 'inherit',\n  },\n  sideListItem: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  list: {\n    width: 250,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 400,\n  },\n  fab: {\n    position: 'absolute' as 'absolute',\n    bottom: `${theme.spacing.unit * 2}`,\n    right: `${theme.spacing.unit * 2}`,\n  },\n  container: {\n    marginBottom: 48,\n  },\n  progress: {\n    position: 'relative' as 'relative',\n    top: '49',\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  users: IUsersState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n}\n\nexport interface IState {\n  drawerOpen: boolean;\n}\n\nclass Header extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      drawerOpen: false,\n    };\n  }\n\n  toggleDrawer = (open: boolean) => () => {\n    this.setState({\n      drawerOpen: open,\n    });\n  }\n\n  render() {\n    const { classes, users } = this.props;\n\n    const sideList = (\n      <div className={classes.list}>\n        <List>\n          <NavLink to={routes.users.new} className={classes.sideListItem}>\n            <ListItem button={true}>\n              <ListItemIcon><AddIcon /></ListItemIcon>\n              <ListItemText primary={'New User'} />\n            </ListItem>\n          </NavLink>\n          <NavLink to={routes.users.list} className={classes.sideListItem}>\n            <ListItem button={true}>\n              <ListItemIcon><ListIcon /></ListItemIcon>\n              <ListItemText primary={'List Users'} />\n            </ListItem>\n          </NavLink>\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.container}>\n        <AppBar\n          position=\"fixed\"\n        >\n          <Toolbar variant=\"dense\">\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n              onClick={this.toggleDrawer(true)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              <NavLink to={routes.default} className={classes.brand}>\n                Demo\n              </NavLink>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        {(users.loading) && <LinearProgress className={classes.progress}  color=\"secondary\" />}\n        <Drawer open={this.state.drawerOpen} onClose={this.toggleDrawer(false)}>\n          <div\n            tabIndex={0}\n            role=\"button\"\n            onClick={this.toggleDrawer(false)}\n            onKeyDown={this.toggleDrawer(false)}\n          >\n            {sideList}\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Header);\n","import { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nimport Page from '../../components/Header';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    users: state.users,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Page);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n}\n\nclass Page extends Component<IProps> {\n  render() {\n    const { classes, } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.root} elevation={1}>\n          <Typography component=\"h1\" variant=\"h4\" gutterBottom={true}>\n            Home\n          </Typography>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Page);\n","import { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nimport Page from './Page';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Page);\n\nexport default Container;\n","import React, { Component, SyntheticEvent } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { routes } from '../../config';\nimport { IUsersState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst styles = (theme: Theme) => ({\n  sideListItem: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  users: IUsersState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  onDelete: (id: string) => void;\n}\n\nclass UserList extends Component<IProps> {\n  handleDelete = (id: string) => (event: SyntheticEvent) => {\n    event.preventDefault();\n    this.props.onDelete(id);\n  }\n\n  render() {\n    const { classes, users } = this.props;\n\n    return (\n      <React.Fragment>\n        <List>\n          {\n            users.itemIds.map((id, index) => {\n              const item = users.items[id];\n              return (\n                <NavLink\n                  to={routes.users.view.replace(':id', id)}\n                  className={classes.sideListItem}\n                  key={index}\n                >\n                  <ListItem\n                    button={true}\n                    dense={true}\n                  >\n                    <ListItemText\n                      primary={item.username}\n                      secondary={item.description}\n                    />\n                    <ListItemSecondaryAction>\n                      <IconButton aria-label=\"Delete\" onClick={this.handleDelete(id)}>\n                        <DeleteIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                </NavLink>\n              );\n            })\n          }\n        </List>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserList);\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport UserList from '../../components/UserList';\nimport { IUsersState } from '../../reducers/initialState';\nimport { routes } from '../../config';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  fab: {\n    position: 'fixed' as 'fixed',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  users: IUsersState;\n  fetchUsers(): any;\n  onDelete: (id: string) => any;\n}\n\nclass Page extends Component<IProps> {\n  async componentDidMount() {\n    if (!this.props.users.loaded) {\n      await this.props.fetchUsers();\n    }\n  }\n\n  render() {\n    const { classes, users, } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.root} elevation={1}>\n          <UserList\n            users={users}\n            onDelete={this.props.onDelete}\n          />\n        </Paper>\n        <Link to={routes.users.new}>\n          <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n            <AddIcon />\n          </Fab>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Page);\n","import axios from 'axios';\nimport { IUser, ICreatedUser } from '../reducers/initialState';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL;\n\nexport const fetchAllUsersCall = () => axios({\n  method: 'get',\n  url: '/users',\n});\n\nexport const fetchOneUserCall = (id: string) => axios({\n  method: 'get',\n  url: `/users/${id}`,\n});\n\nexport const createUserCall = (user: IUser) => axios({\n  method: 'post',\n  url: '/users',\n  data: user,\n});\n\nexport const updateUserCall = (user: ICreatedUser) => axios({\n  method: 'put',\n  url: `/users/${user.id}`,\n  data: user,\n});\n\nexport const removeUserCall = (id: string) => axios({\n  method: 'delete',\n  url: `/users/${id}`,\n});\n","import { RouterState } from 'connected-react-router';\n\nexport interface IUser {\n  readonly username: string;\n  readonly description: string;\n  readonly firstName?: string;\n  readonly lastName?: string;\n  readonly age?: number;\n}\n\nexport interface ICreatedUser extends IUser {\n  readonly id: string;\n}\n\nexport function isCreatedUser(object: any): object is ICreatedUser {\n  return object.id !== undefined;\n}\n\nexport interface IUsers {\n  readonly [key: string]: ICreatedUser;\n}\n\nexport type UserIds = string[];\n\nexport interface IUsersState {\n  readonly itemIds: UserIds;\n  readonly items: IUsers;\n  readonly loading: boolean;\n  readonly loaded: boolean;\n}\n\nexport interface IRootState {\n  readonly users: IUsersState;\n  readonly router?: RouterState;\n}\n\nexport const initialState: IRootState = {\n  users: {\n    itemIds: [],\n    items: {},\n    loading: false,\n    loaded: false,\n  },\n};\n","export enum UsersActionTypes {\n  FETCH_ONE_REQUEST = '@@users/FETCH_ONE_REQUEST',\n  FETCH_ONE_SUCCESS = '@@users/FETCH_ONE_SUCCESS',\n  FETCH_ONE_FAILURE = '@@users/FETCH_ONE_FAILURE',\n\n  FETCH_ALL_REQUEST = '@@users/FETCH_ALL_REQUEST',\n  FETCH_ALL_SUCCESS = '@@users/FETCH_ALL_SUCCESS',\n  FETCH_ALL_FAILURE = '@@users/FETCH_ALL_FAILURE',\n\n  SAVE_ONE_REQUEST = '@@users/SAVE_ONE_REQUEST',\n  SAVE_ONE_SUCCESS = '@@users/SAVE_ONE_SUCCESS',\n  SAVE_ONE_FAILURE = '@@users/SAVE_ONE_FAILURE',\n\n  REMOVE_ONE_REQUEST = '@@users/REMOVE_ONE_REQUEST',\n  REMOVE_ONE_SUCCESS = '@@users/REMOVE_ONE_SUCCESS',\n  REMOVE_ONE_FAILURE = '@@users/REMOVE_ONE_FAILURE',\n}\n","import { createAsyncAction, ActionType } from 'typesafe-actions';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport {\n  fetchAllUsersCall,\n  updateUserCall,\n  createUserCall,\n  removeUserCall,\n  fetchOneUserCall,\n} from '../api';\nimport { IRootState, ICreatedUser, IUser, isCreatedUser } from '../reducers/initialState';\nimport { AxiosError, AxiosResponse } from 'axios';\nimport {\n  UsersActionTypes,\n} from '../constants/users';\n\nexport const fetchOneUserActions = createAsyncAction(\n  UsersActionTypes.FETCH_ONE_REQUEST,\n  UsersActionTypes.FETCH_ONE_SUCCESS,\n  UsersActionTypes.FETCH_ONE_FAILURE,\n)<string, ICreatedUser, AxiosError>();\n\nexport const fetchOneUser = (\n  id: string,\n) => (\n  dispatch: ThunkDispatch<IRootState, null, ActionType<typeof fetchOneUserActions>>,\n) => {\n  dispatch(fetchOneUserActions.request(id));\n  return fetchOneUserCall(id)\n    .then((result: AxiosResponse<ICreatedUser>) => {\n      return dispatch(fetchOneUserActions.success(result.data));\n    })\n    .catch((error: AxiosError) => {\n      return dispatch(fetchOneUserActions.failure(error));\n    });\n};\n\nexport const fetchAllUsersActions = createAsyncAction(\n  UsersActionTypes.FETCH_ALL_REQUEST,\n  UsersActionTypes.FETCH_ALL_SUCCESS,\n  UsersActionTypes.FETCH_ALL_FAILURE,\n)<void, ICreatedUser[], AxiosError>();\n\nexport const fetchUsers = () => (\n  dispatch: ThunkDispatch<IRootState, null, ActionType<typeof fetchAllUsersActions>>,\n) => {\n  dispatch(fetchAllUsersActions.request());\n\n  return fetchAllUsersCall()\n    .then((result: AxiosResponse<ICreatedUser[]>) => {\n      return dispatch(fetchAllUsersActions.success(result.data));\n    })\n    .catch((error: AxiosError) => {\n      return dispatch(fetchAllUsersActions.failure(error));\n    });\n};\n\nexport const saveUserActions = createAsyncAction(\n  UsersActionTypes.SAVE_ONE_REQUEST,\n  UsersActionTypes.SAVE_ONE_SUCCESS,\n  UsersActionTypes.SAVE_ONE_FAILURE,\n)<IUser|ICreatedUser, ICreatedUser, AxiosError>();\n\nexport const saveUser = (\n  user: IUser|ICreatedUser,\n) => (\n  dispatch: ThunkDispatch<IRootState, null, ActionType<typeof saveUserActions>>,\n) => {\n  dispatch(saveUserActions.request(user));\n\n  let apiCall;\n  if (isCreatedUser(user)) {\n    apiCall = updateUserCall(user);\n  } else {\n    apiCall = createUserCall(user);\n  }\n\n  return apiCall\n    .then((result: AxiosResponse<ICreatedUser>) => {\n      return dispatch(saveUserActions.success(result.data));\n    })\n    .catch((error: AxiosError) => {\n      return dispatch(saveUserActions.failure(error));\n    });\n};\n\nexport const removeUserActions = createAsyncAction(\n  UsersActionTypes.REMOVE_ONE_REQUEST,\n  UsersActionTypes.REMOVE_ONE_SUCCESS,\n  UsersActionTypes.REMOVE_ONE_FAILURE,\n)<string, string, AxiosError>();\n\nexport const removeUser = (\n  id: string,\n) => (\n  dispatch: ThunkDispatch<IRootState, null, ActionType<typeof removeUserActions>>,\n) => {\n  dispatch(removeUserActions.request(id));\n\n  return removeUserCall(id)\n    .then((result: AxiosResponse<null>) => {\n      return dispatch(removeUserActions.success(id));\n    })\n    .catch((error: AxiosError) => {\n      return dispatch(removeUserActions.failure(error));\n    });\n};\n","import { IRootState } from '../reducers/initialState';\n\nexport const usersSelector = (state: IRootState) => state.users;\n","import { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nimport Page from './Page';\nimport { IRootState } from '../../reducers/initialState';\nimport { fetchUsers, removeUser } from '../../actions';\nimport { usersSelector } from '../../selectors';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    users: usersSelector(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers()),\n    onDelete: (id: string) => dispatch(removeUser(id)),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Page);\n\nexport default Container;\n","import React, { SyntheticEvent } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { IUser, } from '../../reducers/initialState';\nimport { FormikProps, } from 'formik';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme) => ({\n  formControlControls: {\n    display: 'flex',\n    flexDirection: 'row' as 'row',\n    justifyContent: 'space-between',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  onDelete?: (event: SyntheticEvent) => any;\n  onGoBack: () => any;\n  id?: string;\n}\n\nclass Form extends React.Component<FormikProps<IUser> & IProps> {\n  handleChange = (name: keyof IUser) => (e: React.SyntheticEvent) => {\n    const {\n      handleChange,\n      setFieldTouched\n    } = this.props;\n\n    e.persist();\n\n    handleChange(e);\n    setFieldTouched(name, true, false);\n  }\n\n  render() {\n    const {\n      classes,\n      values: {\n        username,\n        description,\n        age,\n        firstName,\n        lastName,\n      },\n      errors,\n      touched,\n      isValid,\n      handleSubmit,\n    } = this.props;\n\n    return (\n      <form\n        className={classes.container}\n        noValidate={true}\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          InputLabelProps={{ shrink: true }}\n          id=\"username\"\n          name=\"username\"\n          label=\"Username\"\n          helperText={touched.username ? errors.username : ''}\n          error={touched.username && Boolean(errors.username)}\n          className={classes.textField}\n          value={username}\n          onChange={this.handleChange('username')}\n          margin=\"normal\"\n        />\n        <br />\n        <TextField\n          InputLabelProps={{ shrink: true }}\n          id=\"description\"\n          name=\"description\"\n          label=\"Description\"\n          helperText={touched.description ? errors.description : ''}\n          error={touched.description && Boolean(errors.description)}\n          className={classes.textField}\n          value={description}\n          onChange={this.handleChange('description')}\n          margin=\"normal\"\n        />\n        <br />\n        <TextField\n          InputLabelProps={{ shrink: true }}\n          id=\"age\"\n          name=\"age\"\n          label=\"Age\"\n          helperText={touched.age ? errors.age : ''}\n          error={touched.age && Boolean(errors.age)}\n          className={classes.textField}\n          value={age}\n          onChange={this.handleChange('age')}\n          margin=\"normal\"\n        />\n        <br />\n        <TextField\n          InputLabelProps={{ shrink: true }}\n          id=\"firstName\"\n          name=\"firstName\"\n          label=\"First Name\"\n          helperText={touched.firstName ? errors.firstName : ''}\n          error={touched.firstName && Boolean(errors.firstName)}\n          className={classes.textField}\n          value={firstName}\n          onChange={this.handleChange('firstName')}\n          margin=\"normal\"\n        />\n        <br />\n        <TextField\n          InputLabelProps={{ shrink: true }}\n          id=\"lastName\"\n          name=\"lastName\"\n          label=\"Last Name\"\n          helperText={touched.lastName ? errors.lastName : ''}\n          error={touched.lastName && Boolean(errors.lastName)}\n          className={classes.textField}\n          value={lastName}\n          onChange={this.handleChange('lastName')}\n          margin=\"normal\"\n        />\n        <FormControl className={classes.formControlControls} fullWidth={true}>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            onClick={this.props.onGoBack}\n          >\n            Back\n          </Button>\n          {this.props.id && <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.button}\n            onClick={this.props.onDelete}\n          >\n            Delete\n          </Button>}\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!isValid}\n            className={classes.button}\n          >\n            Save\n          </Button>\n        </FormControl>\n      </form>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Form);\n","import * as Yup from 'yup';\n\nexport const userForm = Yup.object({\n  username: Yup\n    .string()\n    .required('username is required')\n    .default(''),\n  description: Yup\n    .string()\n    .required('description is required')\n    .default(''),\n  age: Yup\n    .number()\n    .default(0),\n  firstName: Yup\n    .string()\n    .default(''),\n  lastName: Yup\n    .string()\n    .default(''),\n});\n","import React, { Component, SyntheticEvent } from 'react';\nimport { Formik, FormikActions, FormikConfig, FormikProps } from 'formik';\nimport Form from './Form';\nimport {userForm} from '../../validation';\nimport { routes } from '../../config';\nimport { IUsersState, ICreatedUser, IUser } from '../../reducers/initialState';\nimport { ConnectedRouterProps } from 'connected-react-router';\n\nexport interface IProps extends ConnectedRouterProps {\n  onEntitySave: (payload: IUser|ICreatedUser) => void;\n  onDelete?: (id: string) => void;\n  users: IUsersState;\n  id?: string;\n}\n\nclass UserForm extends Component<IProps> {\n  handleSubmit = async (values: ICreatedUser, actions: FormikActions<ICreatedUser>) => {\n    try {\n      await this.props.onEntitySave(values);\n      actions.setSubmitting(false);\n\n      this.props.history.push(routes.users.list);\n    } catch (error) {\n      actions.setSubmitting(false);\n      actions.setErrors(error);\n      actions.setStatus({ msg: 'Set some arbitrary status or data' });\n    }\n  }\n\n  handleDelete = (event: SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onDelete && this.props.id) {\n      this.props.onDelete(this.props.id);\n    }\n    this.props.history.push(routes.users.list);\n  }\n\n  handleGoBack = () => this.props.history.goBack();\n\n  handleFormikRender = (props: FormikProps<IUser>) => (\n    <Form\n      {...props}\n      onDelete={this.handleDelete}\n      onGoBack={this.handleGoBack}\n      id={this.props.id}\n    />\n  )\n\n  render() {\n    const item = this.props.users.items[`${this.props.id}`] || {};\n\n    const values: IUser|ICreatedUser = {\n      id: item.id,\n      username: !item.username\n        ? ''\n        : item.username,\n      description: !item.description\n        ? ''\n        : item.description,\n      age: !item.age\n        ? 0\n        : item.age,\n      firstName: !item.firstName\n        ? ''\n        : item.firstName,\n      lastName: !item.lastName\n        ? ''\n        : item.lastName,\n    };\n\n    return (\n      <Formik\n        render={this.handleFormikRender}\n        initialValues={values}\n        validationSchema={userForm}\n        onSubmit={this.handleSubmit}\n        enableReinitialize={true}\n      />\n    );\n  }\n}\n\nexport default UserForm;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport UserForm from '../../components/UserForm';\nimport { IUsersState, IUser, ICreatedUser } from '../../reducers/initialState';\nimport { History } from 'history';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  users: IUsersState;\n  history: History;\n  onEntitySave: (payload: IUser|ICreatedUser) => any;\n}\n\nclass Page extends Component<IProps> {\n  render() {\n    const { classes, users, history, } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.root} elevation={1}>\n          <UserForm\n            onEntitySave={this.props.onEntitySave}\n            users={users}\n            history={history}\n            id={''}\n          />\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Page);\n","import { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nimport Page from './Page';\nimport { IRootState, IUser, ICreatedUser } from '../../reducers/initialState';\nimport { saveUser } from '../../actions';\nimport { usersSelector } from '../../selectors';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    users: usersSelector(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    onEntitySave: (payload: IUser|ICreatedUser) => dispatch(saveUser(payload)),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Page);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport UserForm from '../../components/UserForm';\nimport { IUsersState, ICreatedUser, IUser } from '../../reducers/initialState';\nimport { History } from 'history';\nimport { RouteComponentProps } from 'react-router-dom';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends RouteComponentProps<any> , React.Props<any> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  users: IUsersState;\n  history: History;\n  onEntitySave: (payload: IUser|ICreatedUser) => any;\n  onDelete: (id: string) => any;\n  fetchUser: (id: string) => any;\n}\n\nclass Page extends Component<IProps> {\n  async componentDidMount() {\n    const user = this.props.users.items[this.props.match.params.id];\n    if (!user && !this.props.users.loading) {\n      await this.props.fetchUser(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    const { classes, users, onEntitySave, onDelete, history, match } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.root} elevation={1}>\n          <UserForm\n            onEntitySave={onEntitySave}\n            onDelete={onDelete}\n            users={users}\n            history={history}\n            id={match.params.id}\n          />\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Page);\n","import { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nimport Page from './Page';\nimport { IRootState, IUser, ICreatedUser } from '../../reducers/initialState';\nimport { saveUser, removeUser, fetchOneUser } from '../../actions';\nimport { usersSelector } from '../../selectors';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    users: usersSelector(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    onEntitySave: (payload: IUser|ICreatedUser) => dispatch(saveUser(payload)),\n    onDelete: (id: string) => dispatch(removeUser(id)),\n    fetchUser: (id: string) => dispatch(fetchOneUser(id)),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Page);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n}\n\nclass Page extends Component<IProps> {\n  render() {\n    const { classes, } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.root} elevation={1}>\n          404 - Page Not Found\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Page);\n","import { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nimport Page from './Page';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Page);\n\nexport default Container;\n","import { History } from 'history';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { ConnectedRouter as Router } from 'connected-react-router';\nimport Header from '../../containers/Header';\nimport HomePage from '../../pages/Home';\nimport UserListPage from '../../pages/UserList';\nimport UserNewPage from '../../pages/UserNew';\nimport UserViewPage from '../../pages/UserView';\nimport NoMatchPage from '../../pages/NoMatch';\nimport { routes } from '../../config';\n\nconst Root = ({ store, history }: {store: any, history: History}) => (\n  <Provider store={store}>\n    <Router history={history}>\n      <div>\n        <Header />\n        <Switch>\n          <Route path={routes.users.new} component={UserNewPage} />\n          <Route path={routes.users.view} component={UserViewPage} />\n          <Route path={routes.users.list} component={UserListPage} />\n          <Route path={routes.default} component={HomePage} exact={true} />\n          <Route component={NoMatchPage} />\n        </Switch>\n      </div>\n    </Router>\n  </Provider>\n);\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config  {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // tslint:disable-next-line no-console\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // tslint:disable-next-line no-console\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // tslint:disable-next-line no-console\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      // tslint:disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // tslint:disable-next-line no-console\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { History } from 'history';\nimport { connectRouter } from 'connected-react-router';\n\nexport default (history: History) => connectRouter(history);\n","import { ActionType, getType } from 'typesafe-actions';\nimport { initialState, IUsersState, IUsers } from './initialState';\nimport * as users from '../actions/users';\n\nexport type UsersActions = ActionType<typeof users>;\n\nexport default (state: IUsersState = initialState.users, action: UsersActions) => {\n  switch (action.type) {\n    case getType(users.fetchAllUsersActions.request): {\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n      };\n    }\n    case getType(users.fetchAllUsersActions.success): {\n      const items: IUsers = action.payload\n        .reduce((result, current) => ({...result, [current.id]: current}), {});\n      const itemIds: string[] = Object.keys(items)\n        .filter((id: string) => items[id]);\n      return {\n        ...state,\n        itemIds,\n        items,\n        loading: false,\n        loaded: true,\n      };\n    }\n    case getType(users.fetchAllUsersActions.failure): {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    case getType(users.fetchOneUserActions.request): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case getType(users.fetchOneUserActions.success): {\n      const items: IUsers = {\n        ...state.items,\n        [action.payload.id]: action.payload,\n      };\n      const itemIds = Object.keys(items)\n        .filter((id: string) => items[id]);\n      return {\n        ...state,\n        itemIds,\n        items,\n        loading: false,\n      };\n    }\n    case getType(users.fetchOneUserActions.failure): {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    case getType(users.saveUserActions.request): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case getType(users.saveUserActions.success): {\n      const items: IUsers = {\n        ...state.items,\n        [action.payload.id]: action.payload,\n      };\n\n      const itemIds = Object.keys(items)\n        .filter((id: string) => items[id]);\n\n      return {\n        ...state,\n        itemIds,\n        items,\n        loading: false,\n      };\n    }\n    case getType(users.saveUserActions.failure): {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    case getType(users.removeUserActions.request): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case getType(users.removeUserActions.success): {\n      const {[action.payload]: value, ...items } = state.items;\n\n      const itemIds = Object.keys(items)\n        .filter((id: string) => items[id]);\n\n      return {\n        ...state,\n        itemIds,\n        items,\n        loading: false,\n      };\n    }\n    case getType(users.removeUserActions.failure): {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import createHistory from 'history/createBrowserHistory';\nimport { createStore, applyMiddleware, Store, } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { routerMiddleware } from 'connected-react-router';\n\nimport rootReducer from '../reducers';\nimport { IRootState } from '../reducers/initialState';\n\nexport const history = createHistory({\n  basename: process.env.PUBLIC_URL,\n});\n\nconst configureStore = (): { store: Store<IRootState> } => {\n  const middlewares = [\n    routerMiddleware(history),\n    thunk,\n  ];\n\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [\n    middlewareEnhancer,\n  ];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(\n    rootReducer(history),\n    undefined,\n    composedEnhancers\n  );\n\n  return { store };\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './components/Root';\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore, {history} from './store';\n\nconst {store} = configureStore();\n\nReactDOM.render(\n  <Root\n    store={store}\n    history={history}\n  />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { History } from 'history';\nimport { combineReducers, } from 'redux';\nimport { IRootState } from './initialState';\nimport router from './router';\nimport users from './users';\nimport { UsersActions } from './users';\nimport { RouterAction } from 'connected-react-router';\n\nexport type RootActions = UsersActions | RouterAction;\n\nexport default (history: History) => combineReducers<IRootState>({\n  users,\n  router: router(history),\n});\n"],"sourceRoot":""}